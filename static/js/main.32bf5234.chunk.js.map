{"version":3,"sources":["js/components/ListItem.jsx","js/components/NewToDoForm.jsx","js/components/ToDoList.jsx","js/App.js","serviceWorker.js","index.js"],"names":["ListItem","state","content","props","handleDelete","e","deleteItem","id","handleEditClick","otherListItemsFalse","handleEditSubmit","preventDefault","editItem","isOpen","isScratched","handleChange","setState","target","name","value","handleScratch","toggleScratch","handleKeyDown","keyCode","toggleFormItem","className","this","onSubmit","type","placeholder","onChange","onKeyDown","autoFocus","onClick","Component","NewToDoForm","handleSubmit","handleItem","closeNewForm","ToDoList","list","addListItem","listItem","prevState","uuid","filter","item","map","oldItem","handleClick","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32bf5234.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport '../../css/ListItem.css';\r\n\r\nexport default class ListItem extends Component {\r\n\tstate = {\r\n\t\tcontent: this.props.content\r\n\t};\r\n\r\n\thandleDelete = e => {\r\n\t\tthis.props.deleteItem(this.props.id);\r\n\t};\r\n\r\n\thandleEditClick = e => {\r\n\t\tthis.props.otherListItemsFalse(this.props.id);\r\n\t};\r\n\r\n\thandleEditSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.editItem({\r\n\t\t\tcontent: this.state.content,\r\n\t\t\tid: this.props.id,\r\n\t\t\tisOpen: false,\r\n\t\t\tisScratched: this.props.isScratched\r\n\t\t});\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleScratch = e => {\r\n\t\tthis.props.toggleScratch(this.props.id);\r\n\t};\r\n\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tthis.props.toggleFormItem(this.props.id);\r\n\t\t\tthis.setState({ content: this.props.content });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<li className=\"ListItem\" id={this.props.id}>\r\n\t\t\t\t{this.props.isOpen ? (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<form onSubmit={this.handleEditSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Editing item\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.content}\r\n\t\t\t\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={this.handleDelete}\r\n\t\t\t\t\t\t\tclassName=\"trash listItemButtons\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"far fa-trash-alt\" />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={this.handleEditClick}\r\n\t\t\t\t\t\t\tclassName=\"edit listItemButtons\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-edit\" />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={this.handleScratch}\r\n\t\t\t\t\t\t\tclassName={`${this.props.isScratched &&\r\n\t\t\t\t\t\t\t\t'strike-through'} content`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.props.content}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t)}\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport '../../css/NewToDoForm.css';\r\n\r\nexport default class NewToDoForm extends Component {\r\n\tstate = {\r\n\t\tcontent: ''\r\n\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.handleItem(this.state);\r\n\t\tthis.setState({ content: '' });\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\treturn this.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\thandleKeyDown = e => {\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tthis.props.closeNewForm();\r\n\t\t\tthis.setState({ content: '' });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t{this.props.isOpen && (\r\n\t\t\t\t\t<form className={`NewToDoForm `} onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Add new item to do here\"\r\n\t\t\t\t\t\t\tvalue={this.state.content}\r\n\t\t\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { v4 as uuid } from 'uuid';\r\nimport NewToDoForm from './NewToDoForm';\r\nimport '../../css/ToDoList.css';\r\n\r\nexport default class ToDoList extends Component {\r\n\tstate = {\r\n\t\tlist: [],\r\n\t\tisOpen: false\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst list = JSON.parse(localStorage.getItem('ToDoAppList'));\r\n\t\tlist ? this.setState({ list: list }) : this.setState({ list: [] });\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tlocalStorage.setItem('ToDoAppList', JSON.stringify(this.state.list));\r\n\t}\r\n\r\n\t// These functions are used for list items\r\n\t// ======================================================================\r\n\taddListItem = listItem => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tlist: [ ...prevState.list, { ...listItem, id: uuid() } ]\r\n\t\t}));\r\n\t};\r\n\r\n\tdeleteItem = id => {\r\n\t\tthis.setState({\r\n\t\t\tlist: this.state.list.filter(item => item.id !== id).map(item => {\r\n\t\t\t\treturn { ...item, isOpen: false };\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\teditItem = item => {\r\n\t\tthis.setState({\r\n\t\t\tlist: this.state.list.map(oldItem => {\r\n\t\t\t\tif (oldItem.id === item.id) return item;\r\n\t\t\t\treturn oldItem;\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleScratch = id => {\r\n\t\tthis.setState({\r\n\t\t\tlist: this.state.list.map(oldItem => {\r\n\t\t\t\tif (oldItem.id === id)\r\n\t\t\t\t\treturn { ...oldItem, isScratched: !oldItem.isScratched };\r\n\t\t\t\treturn oldItem;\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\totherListItemsFalse = id => {\r\n\t\tthis.setState({\r\n\t\t\tlist: this.state.list.map(item => {\r\n\t\t\t\tif (item.id !== id) {\r\n\t\t\t\t\treturn { ...item, isOpen: false };\r\n\t\t\t\t}\r\n\t\t\t\treturn { ...item, isOpen: true };\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\ttoggleFormItem = id => {\r\n\t\tthis.setState({\r\n\t\t\tlist: this.state.list.map(item => {\r\n\t\t\t\tif (item.id === id) return { ...item, isOpen: !item.isOpen };\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t});\r\n\t};\r\n\r\n\t// ==========================================================\r\n\t// These functions are used for the form itself\r\n\t// ==========================================================\r\n\thandleClick = e => {\r\n\t\tthis.setState({ isOpen: !this.state.isOpen });\r\n\t};\r\n\r\n\tcloseNewForm = () => {\r\n\t\tthis.setState({\r\n\t\t\tisOpen: false\r\n\t\t});\r\n\t};\r\n\t// ===============================================================\r\n\r\n\trender() {\r\n\t\tconst list = this.state.list.map(item => {\r\n\t\t\treturn (\r\n\t\t\t\t<ListItem\r\n\t\t\t\t\tcontent={item.content}\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tdeleteItem={this.deleteItem}\r\n\t\t\t\t\teditItem={this.editItem}\r\n\t\t\t\t\totherListItemsFalse={this.otherListItemsFalse}\r\n\t\t\t\t\ttoggleFormItem={this.toggleFormItem}\r\n\t\t\t\t\tisOpen={item.isOpen}\r\n\t\t\t\t\tisScratched={item.isScratched}\r\n\t\t\t\t\ttoggleScratch={this.toggleScratch}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"ToDoList\">\r\n\t\t\t\t<h1 id=\"title\">\r\n\t\t\t\t\tTo-Do List\r\n\t\t\t\t\t<span id=\"plus\" onClick={this.handleClick}>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName={`fas fa-${this.state.isOpen\r\n\t\t\t\t\t\t\t\t? 'minus'\r\n\t\t\t\t\t\t\t\t: 'plus'}-square`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<NewToDoForm\r\n\t\t\t\t\tisOpen={this.state.isOpen}\r\n\t\t\t\t\thandleItem={this.addListItem}\r\n\t\t\t\t\tcloseNewForm={this.closeNewForm}\r\n\t\t\t\t/>\r\n\t\t\t\t<ul>{list}</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport ToDoList from './components/ToDoList';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<ToDoList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './js/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}